/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#include <com/sun/star/uno/XInterface.idl>

#ifndef __com_sun_star_frame_XFrame_idl__
#include <com/sun/star/frame/XFrame.idl>
#endif

module org {
module neooffice
{
	/**
	 * Interface for the .
	 */
	interface XNeoOfficeMobile : com::sun::star::uno::XInterface
	{
		boolean aboutNeoOfficeMobile( );
		boolean hasNeoOfficeMobile( );
		boolean openNeoOfficeMobile( );
		boolean setPropertyValue( [in] com::sun::star::frame::XFrame frame, [in] string key, [in] string value );
		string getPropertyValue( [in] com::sun::star::frame::XFrame frame, [in] string key );
		boolean isPasswordProtected( [in] com::sun::star::frame::XFrame frame );
		boolean saveAsPDF( [in] com::sun::star::frame::XFrame frame, [in] string url );
		boolean saveAsHTML( [in] com::sun::star::frame::XFrame frame, [in] string url );
		boolean saveAsOpenDocument( [in] com::sun::star::frame::XFrame frame, [in] string url );
		boolean saveAsOfficeDocument( [in] com::sun::star::frame::XFrame frame, [in] string url );
		string getOpenDocumentExtension( [in] com::sun::star::frame::XFrame frame );
		string getOfficeDocumentExtension( [in] com::sun::star::frame::XFrame frame );
		string getMimeType( [in] com::sun::star::frame::XFrame frame );
		string getOfficeMimeType( [in] com::sun::star::frame::XFrame frame );
		boolean zipDirectory( [in] string dirPath, [in] string outZipFile );
	};
	
	service NeoOfficeMobile
	{
		interface XNeoOfficeMobile;
	};
};
};
