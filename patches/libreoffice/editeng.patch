--- source/items/justifyitem.cxx	2015-11-25 07:55:38.000000000 -0500
+++ source/items/justifyitem.cxx	2021-05-04 18:21:34.000000000 -0400
@@ -402,10 +402,4 @@
     return SVX_JUSTIFY_METHOD_DISTRIBUTE + 1;   // Last Enum value + 1
 }
 
-SvxJustifyMethodItem& SvxJustifyMethodItem::operator=(const SvxJustifyMethodItem& r)
-{
-    SetValue( r.GetValue() );
-    return *this;
-}
-
 /* vim:set shiftwidth=4 softtabstop=4 expandtab: */
--- source/editeng/editdoc.hxx	2015-11-25 07:55:38.000000000 -0500
+++ source/editeng/editdoc.hxx	2021-05-05 08:27:05.000000000 -0400
@@ -164,8 +164,6 @@
 
 public:
                     ContentAttribs( SfxItemPool& rItemPool );
-                    ContentAttribs( const ContentAttribs& );
-                    ~ContentAttribs();  // only for larger Tabs
 
     SvxTabStop      FindTabStop( sal_Int32 nCurPos, sal_uInt16 nDefTab );
     SfxItemSet&     GetItems()                          { return aAttribSet; }
@@ -311,7 +309,6 @@
 
 public:
     EditPaM();
-    EditPaM(const EditPaM& r);
     EditPaM(ContentNode* p, sal_Int32 n);
 
     const ContentNode* GetNode() const { return pNode;}
@@ -323,7 +320,6 @@
 
     bool       DbgIsBuggy( EditDoc& rDoc );
 
-    EditPaM&    operator = ( const EditPaM& rPaM );
     friend bool operator == ( const EditPaM& r1, const EditPaM& r2 );
     friend bool operator != ( const EditPaM& r1, const EditPaM& r2 );
     bool operator !() const { return !pNode && !nIndex; }
--- source/editeng/editdoc.cxx	2015-11-25 07:55:38.000000000 -0500
+++ source/editeng/editdoc.cxx	2021-05-05 08:25:05.000000000 -0400
@@ -1177,7 +1177,6 @@
 }
 
 EditPaM::EditPaM() : pNode(NULL), nIndex(0) {}
-EditPaM::EditPaM(const EditPaM& r) : pNode(r.pNode), nIndex(r.nIndex) {}
 EditPaM::EditPaM(ContentNode* p, sal_Int32 n) : pNode(p), nIndex(n) {}
 
 
@@ -1257,13 +1256,6 @@
            ( r1.GetIndex() == r2.GetIndex() );
 }
 
-EditPaM& EditPaM::operator = ( const EditPaM& rPaM )
-{
-    nIndex = rPaM.nIndex;
-    pNode = rPaM.pNode;
-    return *this;
-}
-
 bool operator != ( const EditPaM& r1, const EditPaM& r2 )
 {
     return !( r1 == r2 );
@@ -1854,16 +1846,6 @@
 {
 }
 
-ContentAttribs::ContentAttribs( const ContentAttribs& rRef )
-: pStyle(rRef.pStyle)
-, aAttribSet( rRef.aAttribSet )
-{
-}
-
-ContentAttribs::~ContentAttribs()
-{
-}
-
 SvxTabStop ContentAttribs::FindTabStop( sal_Int32 nCurPos, sal_uInt16 nDefTab )
 {
     const SvxTabStopItem& rTabs = static_cast<const SvxTabStopItem&>( GetItem( EE_PARA_TABS ) );
--- source/editeng/fieldupdater.cxx	2015-11-25 07:55:38.000000000 -0500
+++ source/editeng/fieldupdater.cxx	2021-05-05 08:23:17.000000000 -0400
@@ -22,7 +22,6 @@
     EditTextObjectImpl& mrObj;
 public:
     FieldUpdaterImpl(EditTextObject& rObj) : mrObj(*rObj.mpImpl) {}
-    FieldUpdaterImpl(const FieldUpdaterImpl& r) : mrObj(r.mrObj) {}
 
     void updateTableFields(int nTab)
     {
--- source/items/borderline.cxx	2015-11-25 07:55:38.000000000 -0500
+++ source/items/borderline.cxx	2021-05-05 08:22:41.000000000 -0400
@@ -396,33 +396,6 @@
     return aImpl;
 }
 
-
-
-SvxBorderLine::SvxBorderLine( const SvxBorderLine& r )
-{
-    *this = r;
-}
-
-
-
-SvxBorderLine& SvxBorderLine::operator=( const SvxBorderLine& r )
-{
-    aColor = r.aColor;
-    m_nWidth = r.m_nWidth;
-    m_aWidthImpl = r.m_aWidthImpl;
-    m_bMirrorWidths = r.m_bMirrorWidths;
-    m_nMult = r.m_nMult;
-    m_nDiv = r.m_nDiv;
-    m_nStyle = r.m_nStyle;
-    m_bUseLeftTop = r.m_bUseLeftTop;
-    m_pColorOutFn = r.m_pColorOutFn;
-    m_pColorInFn = r.m_pColorInFn;
-    m_pColorGapFn = r.m_pColorGapFn;
-    return *this;
-}
-
-
-
 void SvxBorderLine::ScaleMetrics( long nMult, long nDiv )
 {
     m_nMult = nMult;
--- source/items/paraitem.cxx	2015-11-25 07:55:38.000000000 -0500
+++ source/items/paraitem.cxx	2021-05-05 08:20:44.000000000 -0400
@@ -882,14 +882,6 @@
 
 
 
-SvxTabStopItem::SvxTabStopItem( const SvxTabStopItem& rTSI ) :
-    SfxPoolItem( rTSI.Which() ),
-    maTabStops( rTSI.maTabStops )
-{
-}
-
-
-
 sal_uInt16 SvxTabStopItem::GetPos( const SvxTabStop& rTab ) const
 {
     SvxTabStopArr::const_iterator it = maTabStops.find( rTab );
--- source/items/textitem.cxx	2015-11-25 07:55:38.000000000 -0500
+++ source/items/textitem.cxx	2021-05-05 08:19:35.000000000 -0400
@@ -162,16 +162,6 @@
 
 
 
-SvxFontListItem::SvxFontListItem( const SvxFontListItem& rItem ) :
-
-    SfxPoolItem( rItem ),
-    pFontList( rItem.GetFontList() ),
-    aFontNameSeq( rItem.aFontNameSeq )
-{
-}
-
-
-
 SfxPoolItem* SvxFontListItem::Clone( SfxItemPool* ) const
 {
     return new SvxFontListItem( *this );
@@ -1817,11 +1807,6 @@
     SetValue(aColor);
 }
 
-SvxBackgroundColorItem::SvxBackgroundColorItem( const SvxBackgroundColorItem& rCopy ) :
-    SvxColorItem( rCopy )
-{
-}
-
 SfxPoolItem* SvxBackgroundColorItem::Clone( SfxItemPool * ) const
 {
     return new SvxBackgroundColorItem(*this);
@@ -1905,12 +1890,6 @@
     mColor = aColor;
 }
 
-SvxColorItem::SvxColorItem( const SvxColorItem &rCopy ) :
-    SfxPoolItem( rCopy ),
-    mColor( rCopy.mColor )
-{
-}
-
 SvxColorItem::~SvxColorItem()
 {
 }
@@ -2856,14 +2835,6 @@
 {
 }
 
-SvxTwoLinesItem::SvxTwoLinesItem( const SvxTwoLinesItem& rAttr )
-    : SfxPoolItem( rAttr.Which() ),
-    cStartBracket( rAttr.cStartBracket ),
-    cEndBracket( rAttr.cEndBracket ),
-    bOn( rAttr.bOn )
-{
-}
-
 SvxTwoLinesItem::~SvxTwoLinesItem()
 {
 }
--- source/misc/swafopt.cxx	2015-11-25 07:55:38.000000000 -0500
+++ source/misc/swafopt.cxx	2021-05-05 08:17:15.000000000 -0400
@@ -80,64 +80,4 @@
     pSmartTagMgr = 0;
 }
 
-
-SvxSwAutoFmtFlags& SvxSwAutoFmtFlags::operator=( const SvxSwAutoFmtFlags& rAFFlags )
-{
-    bAutoCorrect = rAFFlags.bAutoCorrect;
-    bCptlSttSntnc = rAFFlags.bCptlSttSntnc;
-    bCptlSttWrd = rAFFlags.bCptlSttWrd;
-    bChkFontAttr = rAFFlags.bChkFontAttr;
-
-    bChgUserColl = rAFFlags.bChgUserColl;
-    bChgEnumNum = rAFFlags.bChgEnumNum;
-    bDelEmptyNode = rAFFlags.bDelEmptyNode;
-    bSetNumRule = rAFFlags.bSetNumRule;
-    bAFmtByInput = rAFFlags.bAFmtByInput;
-
-    bAddNonBrkSpace = rAFFlags.bAddNonBrkSpace;
-    bChgOrdinalNumber = rAFFlags.bChgOrdinalNumber;
-    bChgToEnEmDash = rAFFlags.bChgToEnEmDash;
-    bChgWeightUnderl = rAFFlags.bChgWeightUnderl;
-    bSetINetAttr = rAFFlags.bSetINetAttr;
-    bSetBorder = rAFFlags.bSetBorder;
-    bCreateTable = rAFFlags.bCreateTable;
-    bReplaceStyles = rAFFlags.bReplaceStyles;
-    bAFmtDelSpacesAtSttEnd = rAFFlags.bAFmtDelSpacesAtSttEnd;
-    bAFmtDelSpacesBetweenLines = rAFFlags.bAFmtDelSpacesBetweenLines;
-    bAFmtByInpDelSpacesAtSttEnd = rAFFlags.bAFmtByInpDelSpacesAtSttEnd;
-    bAFmtByInpDelSpacesBetweenLines = rAFFlags.bAFmtByInpDelSpacesBetweenLines;
-
-    bDummy = rAFFlags.bDummy;
-
-    bDummy6 = rAFFlags.bDummy6;
-    bDummy7 = rAFFlags.bDummy7;
-    bDummy8 = rAFFlags.bDummy8;
-
-    bWithRedlining = rAFFlags.bWithRedlining;
-
-    bRightMargin = rAFFlags.bRightMargin;
-    nRightMargin = rAFFlags.nRightMargin;
-
-    cBullet = rAFFlags.cBullet;
-    aBulletFont = rAFFlags.aBulletFont;
-
-    cByInputBullet = rAFFlags.cByInputBullet;
-    aByInputBulletFont = rAFFlags.aByInputBulletFont;
-
-    bAutoCompleteWords = rAFFlags.bAutoCompleteWords;
-    bAutoCmpltCollectWords = rAFFlags.bAutoCmpltCollectWords;
-    bAutoCmpltKeepList = rAFFlags.bAutoCmpltKeepList;
-    bAutoCmpltEndless = rAFFlags.bAutoCmpltEndless;
-    bAutoCmpltAppendBlanc = rAFFlags.bAutoCmpltAppendBlanc;
-    bAutoCmpltShowAsTip = rAFFlags.bAutoCmpltShowAsTip;
-    m_pAutoCompleteList = rAFFlags.m_pAutoCompleteList;
-    pSmartTagMgr = rAFFlags.pSmartTagMgr;
-    nAutoCmpltExpandKey = rAFFlags.nAutoCmpltExpandKey;
-
-    nAutoCmpltWordLen = rAFFlags.nAutoCmpltWordLen;
-    nAutoCmpltListLen = rAFFlags.nAutoCmpltListLen;
-
-    return *this;
-}
-
 /* vim:set shiftwidth=4 softtabstop=4 expandtab: */
--- source/outliner/paralist.cxx	2015-11-25 07:55:38.000000000 -0500
+++ source/outliner/paralist.cxx	2021-05-05 08:15:54.000000000 -0400
@@ -33,21 +33,6 @@
 {
 }
 
-ParagraphData::ParagraphData( const ParagraphData& r )
-: nDepth( r.nDepth )
-, mnNumberingStartValue( r.mnNumberingStartValue )
-, mbParaIsNumberingRestart( r.mbParaIsNumberingRestart )
-{
-}
-
-ParagraphData& ParagraphData::operator=( const ParagraphData& r)
-{
-    nDepth = r.nDepth;
-    mnNumberingStartValue = r.mnNumberingStartValue;
-    mbParaIsNumberingRestart = r.mbParaIsNumberingRestart;
-    return *this;
-}
-
 bool ParagraphData::operator==(const ParagraphData& rCandidate) const
 {
     return (nDepth == rCandidate.nDepth
--- source/items/optitems.cxx	2021-05-05 09:53:16.000000000 -0400
+++ source/items/optitems.cxx	2021-05-05 11:16:04.000000000 -0400
@@ -48,15 +48,6 @@
 
 
 
-SfxSpellCheckItem::SfxSpellCheckItem( const SfxSpellCheckItem& rItem ) :
-
-    SfxPoolItem( rItem ),
-    xSpellCheck( rItem.GetXSpellChecker() )
-{
-}
-
-
-
 bool SfxSpellCheckItem::GetPresentation
 (
     SfxItemPresentation ,
