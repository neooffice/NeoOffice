--- source/core/attrlist.cxx	2015-11-25 07:55:38.000000000 -0500
+++ source/core/attrlist.cxx	2021-05-01 20:28:00.000000000 -0400
@@ -41,12 +41,6 @@
     {
     }
 
-    SvXMLTagAttribute_Impl( const SvXMLTagAttribute_Impl& r ) :
-        sName(r.sName),
-        sValue(r.sValue)
-    {
-    }
-
     OUString sName;
     OUString sValue;
 };
@@ -59,11 +53,6 @@
         vecAttribute.reserve(20);
     }
 
-    SvXMLAttributeList_Impl( const SvXMLAttributeList_Impl& r ) :
-            vecAttribute( r.vecAttribute )
-    {
-    }
-
     ::std::vector<struct SvXMLTagAttribute_Impl> vecAttribute;
     typedef ::std::vector<struct SvXMLTagAttribute_Impl>::size_type size_type;
 };
--- source/style/xmlprmap.cxx	2015-11-25 07:55:38.000000000 -0500
+++ source/style/xmlprmap.cxx	2021-05-01 20:13:01.000000000 -0400
@@ -67,9 +67,6 @@
         const XMLPropertyMapEntry& rMapEntry,
         const rtl::Reference< XMLPropertyHandlerFactory >& rFactory );
 
-    XMLPropertySetMapperEntry_Impl(
-        const XMLPropertySetMapperEntry_Impl& rEntry );
-
     sal_uInt32 GetPropType() const { return nType & XML_TYPE_PROP_MASK; }
 };
 
@@ -88,20 +85,6 @@
 {
 }
 
-XMLPropertySetMapperEntry_Impl::XMLPropertySetMapperEntry_Impl(
-        const XMLPropertySetMapperEntry_Impl& rEntry ) :
-    sXMLAttributeName( rEntry.sXMLAttributeName),
-    sAPIPropertyName( rEntry.sAPIPropertyName),
-    nType( rEntry.nType),
-    nXMLNameSpace( rEntry.nXMLNameSpace),
-    nContextId( rEntry.nContextId),
-    nEarliestODFVersionForExport( rEntry.nEarliestODFVersionForExport ),
-    bImportOnly( rEntry.bImportOnly),
-    pHdl( rEntry.pHdl)
-{
-    DBG_ASSERT( pHdl, "Unknown XML property type handler!" );
-}
-
 struct XMLPropertySetMapper::Impl
 {
     std::vector<XMLPropertySetMapperEntry_Impl> maMapEntries;
--- source/forms/layerimport.cxx	2015-11-25 07:55:38.000000000 -0500
+++ source/forms/layerimport.cxx	2021-05-12 07:26:21.000000000 -0400
@@ -52,6 +52,7 @@
 #include <xmloff/xmlnmspe.hxx>
 #include <rtl/strbuf.hxx>
 #include <algorithm>
+#include <functional>
 
 namespace xmloff
 {
@@ -581,18 +582,15 @@
     // process XForms-bindings; call registerXFormsValueBinding for each
     std::for_each( m_aXFormsValueBindings.begin(),
                    m_aXFormsValueBindings.end(),
-                   bind1st( ptr_fun( bindXFormsValueBinding ),
-                            rImport.GetModel() ) );
+                   std::bind( bindXFormsValueBinding, rImport.GetModel(), std::placeholders::_1 ) );
     // same for list bindings
     std::for_each( m_aXFormsListBindings.begin(),
                    m_aXFormsListBindings.end(),
-                   bind1st( ptr_fun( bindXFormsListBinding ),
-                            rImport.GetModel() ) );
+                   std::bind( bindXFormsListBinding, rImport.GetModel(), std::placeholders::_1 ) );
     // same for submissions
     std::for_each( m_aXFormsSubmissions.begin(),
                    m_aXFormsSubmissions.end(),
-                   bind1st( ptr_fun( bindXFormsSubmission ),
-                            rImport.GetModel() ) );
+                   std::bind( bindXFormsSubmission, rImport.GetModel(), std::placeholders::_1 ) );
 }
 
 }   // namespace xmloff
--- source/xforms/TokenContext.cxx	2015-11-25 07:55:38.000000000 -0500
+++ source/xforms/TokenContext.cxx	2021-05-12 08:05:30.000000000 -0400
@@ -130,7 +130,7 @@
     const sal_Unicode* pEnd = &( pBegin[ rCharacters.getLength() ] );
 
     // raise error if non-whitespace character is found
-    if( ::std::find_if( pBegin, pEnd, ::std::not1(::std::ptr_fun(lcl_IsWhiteSpace)) ) != pEnd )
+    if( !::std::all_of( pBegin, pEnd, lcl_IsWhiteSpace ) )
         GetImport().SetError( XMLERROR_UNKNOWN_CHARACTERS, rCharacters );
 }
 
