--- svx/tbcontrl.hxx	2016-11-24 18:45:24.000000000 -0800
+++ svx/tbcontrl.hxx	2016-11-24 19:25:29.000000000 -0800
@@ -138,10 +138,10 @@
 #include <boost/scoped_ptr.hpp>
 #include <com/sun/star/awt/FontDescriptor.hpp>
 #include <svx/PaletteManager.hxx>
+#include <editeng/boxitem.hxx>
 
 // important im tbxctrls.hxx created HeDaBu !!!
 class SvxLineItem;
-class SvxBoxInfoItem;
 class SvxFontItem;
 class SfxStyleControllerItem_Impl;
 class SfxStyleSheetBasePool;
@@ -256,17 +256,25 @@
 
 // class SvxFrameToolBoxControl ------------------------------------------
 
+class SvxFrameWindowState_Impl;
+
 class SVX_DLLPUBLIC SvxFrameToolBoxControl : public SfxToolBoxControl
 {
+    SvxBoxItem                  aCurBorderOuter;
+    SvxBoxInfoItem              aCurBorderInner;
+
 public:
     SFX_DECL_TOOLBOX_CONTROL();
     SvxFrameToolBoxControl( sal_uInt16 nSlotId, sal_uInt16 nId, ToolBox& rTbx );
+    virtual ~SvxFrameToolBoxControl() {}
 
     virtual SfxPopupWindowType  GetPopupWindowType() const SAL_OVERRIDE;
     virtual SfxPopupWindow*     CreatePopupWindow() SAL_OVERRIDE;
     virtual void                StateChanged( sal_uInt16 nSID, SfxItemState eState,
                                               const SfxPoolItem* pState ) SAL_OVERRIDE;
 
+   virtual void                 Select(sal_uInt16 nSelectModifier) SAL_OVERRIDE;
+   DECL_LINK( BorderChangedHdl, SvxFrameWindowState_Impl* );
 };
 
 
--- vcl/svapp.hxx	2015-11-25 04:55:38.000000000 -0800
+++ vcl/svapp.hxx	2016-10-27 15:17:19.000000000 -0700
@@ -629,6 +629,8 @@
     */
     static bool                 IsInExecute();
 
+    static sal_Bool             IsShutDown();
+
     /** Queries whether application has a modal dialog active.
 
      @returns   true if a modal dialog is active, false if not
--- svx/svdoole2.hxx	2015-11-25 04:55:38.000000000 -0800
+++ svx/svdoole2.hxx	2016-12-08 13:26:42.000000000 -0800
@@ -22,6 +22,7 @@
 
 #include <svx/svdorect.hxx>
 #include <svx/svxdllapi.h>
+#include <sfx2/linkmgr.hxx>
 
 #include <com/sun/star/uno/Reference.h>
 
@@ -179,6 +180,21 @@
     virtual SdrObject* DoConvertToPolyObj(bool bBezier, bool bAddText) const SAL_OVERRIDE;
 };
 
+class SVX_DLLPUBLIC SdrEmbedObjectLink : public sfx2::SvBaseLink
+{
+    SdrOle2Obj*         pObj;
+
+public:
+    explicit            SdrEmbedObjectLink(SdrOle2Obj* pObj);
+    virtual             ~SdrEmbedObjectLink();
+
+    virtual void        Closed() override;
+    virtual ::sfx2::SvBaseLink::UpdateResult DataChanged(
+        const OUString& rMimeType, const css::uno::Any & rValue ) override;
+
+    bool                Connect() { return GetRealObject() != nullptr; }
+};
+
 #endif // INCLUDED_SVX_SVDOOLE2_HXX
 
 /* vim:set shiftwidth=4 softtabstop=4 expandtab: */
--- cppuhelper/propshlp.hxx	2015-11-25 07:55:38.000000000 -0500
+++ cppuhelper/propshlp.hxx	2020-12-19 10:59:19.000000000 -0500
@@ -649,7 +649,7 @@
 
     /** reserved for future use. finally, the future has arrived...
      */
-    const std::auto_ptr<Impl> m_pReserved;
+    const std::unique_ptr<Impl> m_pReserved;
 
 private:
     OPropertySetHelper( const OPropertySetHelper & );
--- cppuhelper/unourl.hxx	2015-11-25 07:55:38.000000000 -0500
+++ cppuhelper/unourl.hxx	2020-12-19 11:00:05.000000000 -0500
@@ -50,7 +50,7 @@
     explicit UnoUrlDescriptor(rtl::OUString const & rDescriptor);
 
     /// @cond INTERNAL
-    explicit UnoUrlDescriptor(std::auto_ptr< Impl > & rImpl);
+    explicit UnoUrlDescriptor(std::unique_ptr< Impl > & rImpl);
     /// @endcond
 
     UnoUrlDescriptor(UnoUrlDescriptor const & rOther);
@@ -98,7 +98,7 @@
     rtl::OUString getParameter(rtl::OUString const & rKey) const;
 
 private:
-    std::auto_ptr< Impl > m_xImpl;
+    std::unique_ptr< Impl > m_xImpl;
 };
 
 /** Parse UNO URLs into their components.
@@ -175,7 +175,7 @@
 private:
     class Impl;
 
-    std::auto_ptr< Impl > m_xImpl;
+    std::unique_ptr< Impl > m_xImpl;
 };
 
 }
--- /dev/null	2021-04-29 11:11:39.000000000 -0400
+++ o3tl/make_unique.hxx	2021-04-29 11:13:36.000000000 -0400
@@ -0,0 +1,34 @@
+/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
+/*
+ * This file is part of the LibreOffice project.
+ *
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+#ifndef INCLUDED_O3TL_MAKE_UNIQUE_HXX
+#define INCLUDED_O3TL_MAKE_UNIQUE_HXX
+
+#include <memory>
+#include <utility>
+
+namespace o3tl
+{
+
+/**
+ * Constructs an object of type T and wraps it in a std::unique_ptr.
+ *
+ * Can be replaced by std::make_unique when we allow C++14.
+ */
+template<typename T, typename... Args>
+typename std::unique_ptr<T> make_unique(Args&& ... args)
+{
+    return std::unique_ptr<T>(new T(std::forward<Args>(args)...));
+}
+
+}
+
+#endif
+
+/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
--- vcl/IconThemeScanner.hxx	2015-11-25 07:55:38.000000000 -0500
+++ vcl/IconThemeScanner.hxx	2021-04-29 17:38:02.000000000 -0400
@@ -34,8 +34,6 @@
 class VCL_DLLPUBLIC IconThemeScanner
 {
 public:
-    ~IconThemeScanner();
-
     /** Factory method to create the object.
      * Provide a path to search for IconThemes.
      */
--- vcl/event.hxx	2015-11-25 07:55:38.000000000 -0500
+++ vcl/event.hxx	2021-04-29 17:37:21.000000000 -0400
@@ -59,8 +59,6 @@
     sal_uInt16          GetRepeat() const       { return mnRepeat;   }
 
     KeyEvent        LogicalTextDirectionality (TextDirectionality eMode) const;
-                    KeyEvent (const KeyEvent& rKeyEvent);
-
 };
 
 inline KeyEvent::KeyEvent()
--- vcl/keycod.hxx	2015-11-25 07:55:38.000000000 -0500
+++ vcl/keycod.hxx	2021-04-29 17:35:57.000000000 -0400
@@ -70,7 +70,6 @@
 
     KeyFuncType     GetFunction() const;
 
-    KeyCode&        operator = ( const KeyCode& rKeyCode );
     bool            operator ==( const KeyCode& rKeyCode ) const;
     bool            operator !=( const KeyCode& rKeyCode ) const;
 };
@@ -113,14 +112,6 @@
         return (GetFunction() != rKeyCode.GetFunction());
 }
 
-inline vcl::KeyCode& vcl::KeyCode::operator = ( const vcl::KeyCode& rKeyCode )
-{
-    nKeyCodeAndModifiers = rKeyCode.nKeyCodeAndModifiers;
-    eFunc = rKeyCode.eFunc;
-
-    return *this;
-}
-
 #endif // INCLUDED_VCL_KEYCOD_HXX
 
 /* vim:set shiftwidth=4 softtabstop=4 expandtab: */
--- vcl/print.hxx	2015-11-25 07:55:38.000000000 -0500
+++ vcl/print.hxx	2021-04-29 17:19:00.000000000 -0400
@@ -93,8 +93,6 @@
 
 public:
                                QueueInfo();
-                               QueueInfo( const QueueInfo& rInfo );
-                               ~QueueInfo();
 
     const OUString&            GetPrinterName() const { return maPrinterName; }
     const OUString&            GetDriver() const { return maDriver; }
@@ -154,7 +152,6 @@
 public:
 
                                 PrinterOptions();
-                                ~PrinterOptions();
 
     bool                        IsReduceTransparency() const { return mbReduceTransparency; }
     void                        SetReduceTransparency( bool bSet ) { mbReduceTransparency = bSet; }
--- vcl/settings.hxx	2015-11-25 07:55:38.000000000 -0500
+++ vcl/settings.hxx	2021-04-29 17:13:59.000000000 -0400
@@ -74,8 +74,6 @@
 public:
                                     MouseSettings();
 
-                                    ~MouseSettings();
-
     void                            SetOptions( sal_uLong nOptions );
     sal_uLong                       GetOptions() const;
 
@@ -206,7 +204,6 @@
 
 public:
                                     StyleSettings();
-                                    ~StyleSettings();
 
     void                            Set3DColors( const Color& rColor );
 
@@ -587,7 +584,6 @@
 
 public:
                                     MiscSettings();
-                                    ~MiscSettings();
 
 #ifdef WNT
     void                            SetEnableATToolSupport( bool bEnable );
@@ -612,7 +608,6 @@
 
 public:
                                     HelpSettings();
-                                    ~HelpSettings();
 
     sal_uLong                       GetTipDelay() const;
     void                            SetTipTimeout( sal_uLong nTipTimeout );
@@ -651,8 +646,6 @@
 
 public:
                                             AllSettings();
-                                            AllSettings( const AllSettings& rSet );
-                                            ~AllSettings();
 
     void                                    SetMouseSettings( const MouseSettings& rSet );
     const MouseSettings&                    GetMouseSettings() const;
--- osl/profile.hxx	2015-11-25 07:55:38.000000000 -0500
+++ osl/profile.hxx	2021-05-01 17:22:26.000000000 -0400
@@ -100,7 +100,7 @@
             }
             pStrings[ nItems ] = NULL;
             sal_uInt32 nRet = osl_readProfileIdent(profile, rSection.getStr(), rEntry.getStr(), nFirstId, pStrings, nDefault);
-            delete pStrings;
+            delete[] pStrings;
             return nRet;
         }
 
@@ -131,7 +131,7 @@
             pStrings[ nItems ] = NULL;
             bool bRet =
                 osl_writeProfileIdent(profile, rSection.getStr(), rEntry.getStr(), nFirstId, pStrings, nValue );
-            delete pStrings;
+            delete[] pStrings;
             return bRet;
         }
 
@@ -162,7 +162,7 @@
                 size_t nLen;
                 for( n = 0; ( nLen = strlen( pBuf+n ) ); n += nLen+1 )
                     aEntries.push_back( rtl::OString( pBuf+n ) );
-                delete pBuf;
+                delete[] pBuf;
             }
 
             return aEntries;
@@ -184,7 +184,7 @@
                 size_t nLen;
                 for( n = 0; ( nLen = strlen( pBuf+n ) ); n += nLen+1 )
                     aSections.push_back( rtl::OString( pBuf+n ) );
-                delete pBuf;
+                delete[] pBuf;
             }
 
             return aSections;
--- svl/macitem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ svl/macitem.hxx	2021-05-01 19:55:57.000000000 -0400
@@ -60,8 +60,6 @@
     ScriptType GetScriptType() const        { return eType; }
 
     bool HasMacro() const { return !aMacName.isEmpty(); }
-
-    SvxMacro& operator=( const SvxMacro& rBase );
 };
 
 inline SvxMacro::SvxMacro( const OUString &rMacName, const OUString &rLibName,
--- xmloff/maptype.hxx	2015-11-25 07:55:38.000000000 -0500
+++ xmloff/maptype.hxx	2021-05-01 20:25:41.000000000 -0400
@@ -112,8 +112,6 @@
         : mnIndex( nIndex ) {}
     XMLPropertyState( sal_Int32 nIndex, const ::com::sun::star::uno::Any& rValue )
         : mnIndex( nIndex ), maValue( rValue ) {}
-    XMLPropertyState( const XMLPropertyState& rPropState )
-        : mnIndex( rPropState.mnIndex ), maValue( rPropState.maValue ) {}
 };
 
 #endif // INCLUDED_XMLOFF_MAPTYPE_HXX
--- cppuhelper/typeprovider.hxx	2015-11-25 07:55:38.000000000 -0500
+++ cppuhelper/typeprovider.hxx	2021-05-03 07:43:48.000000000 -0400
@@ -47,9 +47,6 @@
         {}
     /// @endcond
 
-    inline OTypeCollection( const OTypeCollection & rCollection )
-        : _aTypes( rCollection._aTypes )
-        {}
     OTypeCollection(
         const ::com::sun::star::uno::Type & rType1,
         const ::com::sun::star::uno::Sequence< ::com::sun::star::uno::Type > & rAddTypes = ::com::sun::star::uno::Sequence< ::com::sun::star::uno::Type >() );
--- svtools/ctrlbox.hxx	2015-11-25 07:55:38.000000000 -0500
+++ svtools/ctrlbox.hxx	2021-05-03 08:48:30.000000000 -0400
@@ -251,7 +251,6 @@
     BorderWidthImpl( sal_uInt16 nFlags = CHANGE_LINE1, double nRate1 = 0.0,
             double nRate2 = 0.0, double nRateGap = 0.0 );
 
-    BorderWidthImpl& operator= ( const BorderWidthImpl& r );
     bool operator== ( const BorderWidthImpl& r ) const;
 
     long GetLine1 ( long nWidth ) const;
--- editeng/autokernitem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/autokernitem.hxx	2021-05-04 19:16:13.000000000 -0400
@@ -48,12 +48,6 @@
                                     SfxMapUnit eCoreMetric,
                                     SfxMapUnit ePresMetric,
                                     OUString &rText, const IntlWrapper * = 0 ) const SAL_OVERRIDE;
-
-    inline SvxAutoKernItem& operator=(const SvxAutoKernItem& rAutoKern)
-        {
-            SetValue( rAutoKern.GetValue() );
-            return *this;
-        }
 };
 
 #endif
--- editeng/blinkitem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/blinkitem.hxx	2021-05-04 19:15:15.000000000 -0400
@@ -47,11 +47,6 @@
                                     SfxMapUnit eCoreMetric,
                                     SfxMapUnit ePresMetric,
                                     OUString &rText, const IntlWrapper * = 0 ) const SAL_OVERRIDE;
-
-    inline SvxBlinkItem& operator=(const SvxBlinkItem& rBlink) {
-            SetValue(rBlink.GetValue());
-            return *this;
-        }
 };
 
 #endif
--- editeng/charhiddenitem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/charhiddenitem.hxx	2021-05-04 19:14:31.000000000 -0400
@@ -41,11 +41,6 @@
                                     SfxMapUnit eCoreMetric,
                                     SfxMapUnit ePresMetric,
                                     OUString &rText, const IntlWrapper * = 0 ) const SAL_OVERRIDE;
-
-    inline SvxCharHiddenItem& operator=(const SvxCharHiddenItem& rHidden) {
-            SetValue(rHidden.GetValue());
-            return *this;
-        }
 };
 
 #endif
--- editeng/charreliefitem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/charreliefitem.hxx	2021-05-04 19:13:59.000000000 -0400
@@ -55,12 +55,6 @@
 
     virtual bool            QueryValue( com::sun::star::uno::Any& rVal, sal_uInt8 nMemberId = 0 ) const SAL_OVERRIDE;
     virtual bool            PutValue( const com::sun::star::uno::Any& rVal, sal_uInt8 nMemberId = 0 ) SAL_OVERRIDE;
-
-    inline SvxCharReliefItem& operator=( const SvxCharReliefItem& rItem )
-    {
-        SetValue( rItem.GetValue() );
-        return *this;
-    }
 };
 
 #endif
--- editeng/charrotateitem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/charrotateitem.hxx	2021-05-04 18:28:06.000000000 -0400
@@ -57,13 +57,6 @@
     virtual bool            QueryValue( com::sun::star::uno::Any& rVal, sal_uInt8 nMemberId = 0 ) const SAL_OVERRIDE;
     virtual bool            PutValue( const com::sun::star::uno::Any& rVal, sal_uInt8 nMemberId = 0 ) SAL_OVERRIDE;
 
-    inline SvxCharRotateItem& operator=( const SvxCharRotateItem& rItem )
-    {
-        SetValue( rItem.GetValue() );
-        SetFitToLine( rItem.IsFitToLine() );
-        return *this;
-    }
-
     virtual bool             operator==( const SfxPoolItem& ) const SAL_OVERRIDE;
 
     // our currently only degree values
--- editeng/charscaleitem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/charscaleitem.hxx	2021-05-04 18:27:39.000000000 -0400
@@ -53,13 +53,6 @@
 
     virtual bool            QueryValue( com::sun::star::uno::Any& rVal, sal_uInt8 nMemberId = 0 ) const SAL_OVERRIDE;
     virtual bool            PutValue( const com::sun::star::uno::Any& rVal, sal_uInt8 nMemberId = 0 ) SAL_OVERRIDE;
-
-    inline SvxCharScaleWidthItem& operator=(const SvxCharScaleWidthItem& rItem )
-    {
-        SetValue( rItem.GetValue() );
-        return *this;
-    }
-
 };
 
 #endif
--- editeng/charsetcoloritem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/charsetcoloritem.hxx	2021-05-04 18:27:04.000000000 -0400
@@ -52,13 +52,6 @@
 
     inline rtl_TextEncoding&    GetCharSet() { return eFrom; }
     inline rtl_TextEncoding     GetCharSet() const { return eFrom; }
-
-    inline SvxCharSetColorItem& operator=(const SvxCharSetColorItem& rColor)
-    {
-        SetValue( rColor.GetValue() );
-        eFrom = rColor.GetCharSet();
-        return *this;
-    }
 };
 
 #endif
--- editeng/cmapitem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/cmapitem.hxx	2021-05-04 18:26:35.000000000 -0400
@@ -56,12 +56,6 @@
     void                    SetValue( sal_uInt16 nNewVal )
                                 {SfxEnumItem::SetValue(nNewVal); }
 
-    inline SvxCaseMapItem& operator=(const SvxCaseMapItem& rMap)
-        {
-            SetValue( rMap.GetValue() );
-            return *this;
-        }
-
     // enum cast
     SvxCaseMap              GetCaseMap() const
                                 { return (SvxCaseMap)GetValue(); }
--- editeng/emphasismarkitem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/emphasismarkitem.hxx	2021-05-04 18:26:04.000000000 -0400
@@ -55,12 +55,6 @@
     virtual bool            QueryValue( com::sun::star::uno::Any& rVal, sal_uInt8 nMemberId = 0 ) const SAL_OVERRIDE;
     virtual bool            PutValue( const com::sun::star::uno::Any& rVal, sal_uInt8 nMemberId = 0 ) SAL_OVERRIDE;
 
-    inline SvxEmphasisMarkItem& operator=(const SvxEmphasisMarkItem& rItem )
-    {
-        SetValue( rItem.GetValue() );
-        return *this;
-    }
-
     // enum cast
     FontEmphasisMark        GetEmphasisMark() const
                                 { return (FontEmphasisMark)GetValue(); }
--- editeng/escapementitem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/escapementitem.hxx	2021-05-04 18:25:25.000000000 -0400
@@ -83,13 +83,6 @@
     inline sal_uInt8 &GetProp() { return nProp; }
     inline sal_uInt8 GetProp() const { return nProp; }
 
-    inline SvxEscapementItem& operator=(const SvxEscapementItem& rEsc)
-        {
-            nEsc  = rEsc.GetEsc();
-            nProp = rEsc.GetProp();
-            return *this;
-        }
-
     virtual sal_uInt16      GetValueCount() const SAL_OVERRIDE;
     virtual OUString   GetValueTextByPos( sal_uInt16 nPos ) const SAL_OVERRIDE;
     virtual sal_uInt16      GetEnumValue() const SAL_OVERRIDE;
--- editeng/forbiddenruleitem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/forbiddenruleitem.hxx	2021-05-04 18:24:52.000000000 -0400
@@ -46,13 +46,6 @@
                                     SfxMapUnit ePresMetric,
                                     OUString &rText,
                                     const IntlWrapper * = 0 ) const SAL_OVERRIDE;
-
-    inline SvxForbiddenRuleItem& operator=(
-                                    const SvxForbiddenRuleItem& rItem )
-    {
-        SetValue( rItem.GetValue() );
-        return *this;
-    }
 };
 
 #endif
--- editeng/hngpnctitem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/hngpnctitem.hxx	2021-05-04 18:24:27.000000000 -0400
@@ -45,13 +45,6 @@
                                     SfxMapUnit ePresMetric,
                                     OUString &rText,
                                     const IntlWrapper * = 0 ) const SAL_OVERRIDE;
-
-    inline SvxHangingPunctuationItem& operator=(
-                                    const SvxHangingPunctuationItem& rItem )
-    {
-        SetValue( rItem.GetValue() );
-        return *this;
-    }
 };
 
 #endif
--- editeng/hyphenzoneitem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/hyphenzoneitem.hxx	2021-05-04 18:23:53.000000000 -0400
@@ -76,16 +76,6 @@
 
     inline sal_uInt8 &GetMaxHyphens() { return nMaxHyphens; }
     inline sal_uInt8 GetMaxHyphens() const { return nMaxHyphens; }
-
-    inline SvxHyphenZoneItem &operator=( const SvxHyphenZoneItem &rNew )
-    {
-        bHyphen = rNew.IsHyphen();
-        bPageEnd = rNew.IsPageEnd();
-        nMinLead = rNew.GetMinLead();
-        nMinTrail = rNew.GetMinTrail();
-        nMaxHyphens = rNew.GetMaxHyphens();
-        return *this;
-    }
 };
 
 #endif
--- editeng/justifyitem.hxx	2021-05-08 21:49:46.000000000 -0400
+++ editeng/justifyitem.hxx	2021-05-09 17:27:28.000000000 -0400
@@ -54,6 +54,7 @@
                 SetValue( rHorJustify.GetValue() );
                 return *this;
             }
+    SvxHorJustifyItem(SvxHorJustifyItem const &) = default; // SfxPoolItem copy function dichotomy
 };
 
 
@@ -87,6 +88,7 @@
                 SetValue( rVerJustify.GetValue() );
                 return *this;
             }
+    SvxVerJustifyItem(SvxVerJustifyItem const &) = default; // SfxPoolItem copy function dichotomy
 };
 
 
@@ -110,8 +112,6 @@
     virtual OUString        GetValueText( sal_uInt16 nVal ) const;
     virtual SfxPoolItem*    Clone( SfxItemPool *pPool = 0 ) const SAL_OVERRIDE;
     virtual SfxPoolItem*    Create( SvStream& rStream, sal_uInt16 nVer ) const SAL_OVERRIDE;
-
-    SvxJustifyMethodItem& operator=(const SvxJustifyMethodItem& r);
 };
 
 #endif
--- editeng/kernitem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/kernitem.hxx	2021-05-04 18:19:16.000000000 -0400
@@ -53,11 +53,6 @@
                                     SfxMapUnit ePresMetric,
                                     OUString &rText, const IntlWrapper * = 0 ) const SAL_OVERRIDE;
 
-    inline SvxKerningItem& operator=(const SvxKerningItem& rKern) {
-            SetValue( rKern.GetValue() );
-            return *this;
-        }
-
     virtual bool            QueryValue( com::sun::star::uno::Any& rVal, sal_uInt8 nMemberId = 0 ) const SAL_OVERRIDE;
     virtual bool            PutValue( const com::sun::star::uno::Any& rVal, sal_uInt8 nMemberId = 0 ) SAL_OVERRIDE;
 };
--- editeng/nhypitem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/nhypitem.hxx	2021-05-04 18:18:42.000000000 -0400
@@ -40,12 +40,6 @@
                                     SfxMapUnit eCoreMetric,
                                     SfxMapUnit ePresMetric,
                                     OUString &rText, const IntlWrapper * = 0 ) const SAL_OVERRIDE;
-
-    inline SvxNoHyphenItem& operator=(const SvxNoHyphenItem& rNHH)
-        {
-            SetValue( rNHH.GetValue() );
-            return *this;
-        }
 };
 
 #endif
--- editeng/orphitem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/orphitem.hxx	2021-05-04 18:17:02.000000000 -0400
@@ -48,12 +48,6 @@
                                     SfxMapUnit eCoreMetric,
                                     SfxMapUnit ePresMetric,
                                     OUString &rText, const IntlWrapper * = 0 ) const SAL_OVERRIDE;
-
-    inline SvxOrphansItem& operator=( const SvxOrphansItem& rOrphans )
-    {
-        SetValue( rOrphans.GetValue() );
-        return *this;
-    }
 };
 
 #endif
--- editeng/paravertalignitem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/paravertalignitem.hxx	2021-05-04 18:15:56.000000000 -0400
@@ -54,12 +54,6 @@
     virtual bool            QueryValue( com::sun::star::uno::Any& rVal, sal_uInt8 nMemberId = 0 ) const SAL_OVERRIDE;
     virtual bool            PutValue( const com::sun::star::uno::Any& rVal, sal_uInt8 nMemberId = 0 ) SAL_OVERRIDE;
 
-    inline SvxParaVertAlignItem& operator=( const SvxParaVertAlignItem& rItem )
-    {
-        SetValue( rItem.GetValue() );
-        return *this;
-    }
-
     virtual bool            operator==( const SfxPoolItem& ) const SAL_OVERRIDE;
 
 };
--- editeng/pbinitem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/pbinitem.hxx	2021-05-04 18:13:53.000000000 -0400
@@ -40,7 +40,6 @@
 
     explicit inline SvxPaperBinItem( const sal_uInt16 nId ,
                             const sal_uInt8 nTray = PAPERBIN_PRINTER_SETTINGS );
-    inline SvxPaperBinItem &operator=( const SvxPaperBinItem &rCpy );
 
     // "pure virtual Methods" from SfxPoolItem
     virtual SfxPoolItem*    Clone( SfxItemPool *pPool = 0 ) const SAL_OVERRIDE;
@@ -56,13 +55,6 @@
     : SfxByteItem( nId, nT )
 {}
 
-inline SvxPaperBinItem &SvxPaperBinItem::operator=(
-    const SvxPaperBinItem &rCpy )
-{
-    SetValue( rCpy.GetValue() );
-    return *this;
-}
-
 #endif
 
 /* vim:set shiftwidth=4 softtabstop=4 expandtab: */
--- editeng/prntitem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/prntitem.hxx	2021-05-04 17:44:01.000000000 -0400
@@ -39,7 +39,6 @@
     TYPEINFO_OVERRIDE();
 
     explicit SvxPrintItem( const sal_uInt16 nId , const bool bPrt = true );
-    inline SvxPrintItem &operator=( const SvxPrintItem &rCpy );
 
     // "pure virtual Methods" from SfxPoolItem
     virtual SfxPoolItem*    Clone( SfxItemPool *pPool = 0 ) const SAL_OVERRIDE;
@@ -56,15 +55,6 @@
     : SfxBoolItem( nId, bPrt )
 {}
 
-inline SvxPrintItem &SvxPrintItem::operator=( const SvxPrintItem &rCpy )
-{
-    SetValue( rCpy.GetValue() );
-    return *this;
-}
-
-
-
-
 #endif
 
 /* vim:set shiftwidth=4 softtabstop=4 expandtab: */
--- editeng/scriptspaceitem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/scriptspaceitem.hxx	2021-05-04 17:42:39.000000000 -0400
@@ -47,13 +47,6 @@
                                     SfxMapUnit ePresMetric,
                                     OUString &rText,
                                     const IntlWrapper * = 0 ) const SAL_OVERRIDE;
-
-    inline SvxScriptSpaceItem& operator=(const SvxScriptSpaceItem& rItem )
-    {
-        SetValue( rItem.GetValue() );
-        return *this;
-    }
-
 };
 
 #endif
--- editeng/spltitem.hxx	2021-05-05 10:06:12.000000000 -0400
+++ editeng/spltitem.hxx	2021-05-05 21:52:31.000000000 -0400
@@ -39,6 +39,9 @@
 
     inline SvxFmtSplitItem( const bool bSplit /*= true*/,
                             const sal_uInt16 nWh  );
+
+    SvxFmtSplitItem(SvxFmtSplitItem const &) = default;
+    SvxFmtSplitItem(SvxFmtSplitItem &&) = default;
     inline SvxFmtSplitItem& operator=( const SvxFmtSplitItem& rSplit );
 
     // "pure virtual Methods" from SfxPoolItem
--- editeng/widwitem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/widwitem.hxx	2021-05-04 17:38:10.000000000 -0400
@@ -48,12 +48,6 @@
                                     SfxMapUnit eCoreMetric,
                                     SfxMapUnit ePresMetric,
                                     OUString &rText, const IntlWrapper * = 0 ) const SAL_OVERRIDE;
-
-    inline SvxWidowsItem& operator=( const SvxWidowsItem& rWidows )
-    {
-        SetValue( rWidows.GetValue() );
-        return *this;
-    }
 };
 
 #endif
--- editeng/writingmodeitem.hxx	2021-05-05 10:06:12.000000000 -0400
+++ editeng/writingmodeitem.hxx	2021-05-05 21:59:09.000000000 -0400
@@ -36,6 +36,9 @@
 
     SvxWritingModeItem& operator=( const SvxWritingModeItem& rItem );
 
+    SvxWritingModeItem(SvxWritingModeItem const &) = default;
+    SvxWritingModeItem(SvxWritingModeItem &&) = default;
+
     virtual SfxPoolItem*    Clone( SfxItemPool *pPool = 0 ) const SAL_OVERRIDE;
     virtual SfxPoolItem*    Create(SvStream &, sal_uInt16) const SAL_OVERRIDE;
     virtual SvStream&       Store(SvStream & rStrm, sal_uInt16 nIVer) const SAL_OVERRIDE;
--- editeng/wrlmitem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/wrlmitem.hxx	2021-05-04 17:35:57.000000000 -0400
@@ -49,12 +49,6 @@
                                     SfxMapUnit eCoreMetric,
                                     SfxMapUnit ePresMetric,
                                     OUString &rText, const IntlWrapper * = 0 ) const SAL_OVERRIDE;
-
-    inline SvxWordLineModeItem& operator=( const SvxWordLineModeItem& rWLM )
-        {
-            SetValue( rWLM.GetValue() );
-            return *this;
-        }
 };
 
 #endif
--- svx/grfcrop.hxx	2021-05-05 10:06:12.000000000 -0400
+++ svx/grfcrop.hxx	2021-05-05 21:48:13.000000000 -0400
@@ -36,6 +36,9 @@
                 sal_uInt16  );
     virtual ~SvxGrfCrop();
 
+    SvxGrfCrop(SvxGrfCrop const &) = default;
+    SvxGrfCrop(SvxGrfCrop &&) = default;
+
     // "pure virtual methods" from SfxPoolItem
     virtual bool                operator==( const SfxPoolItem& ) const SAL_OVERRIDE;
     virtual SfxPoolItem*        Create(SvStream &, sal_uInt16 nVer) const SAL_OVERRIDE;
--- svx/postattr.hxx	2015-11-25 07:55:38.000000000 -0500
+++ svx/postattr.hxx	2021-05-04 17:28:21.000000000 -0400
@@ -44,12 +44,6 @@
                                     OUString &rText, const IntlWrapper * = 0 ) const SAL_OVERRIDE;
 
     virtual SfxPoolItem*    Clone( SfxItemPool *pPool = 0 ) const SAL_OVERRIDE;
-
-    inline SvxPostItAuthorItem& operator=( const SvxPostItAuthorItem& rAuthor )
-    {
-        SetValue( rAuthor.GetValue() );
-        return *this;
-    }
 };
 
 
@@ -75,12 +69,6 @@
                                     OUString &rText, const IntlWrapper * = 0 ) const SAL_OVERRIDE;
 
     virtual SfxPoolItem*    Clone( SfxItemPool *pPool = 0 ) const SAL_OVERRIDE;
-
-    inline SvxPostItDateItem& operator=( const SvxPostItDateItem& rDate )
-    {
-        SetValue( rDate.GetValue() );
-        return *this;
-    }
 };
 
 
@@ -107,12 +95,6 @@
                                     OUString &rText, const IntlWrapper * = 0 ) const SAL_OVERRIDE;
 
     virtual SfxPoolItem*    Clone( SfxItemPool *pPool = 0 ) const SAL_OVERRIDE;
-
-    inline SvxPostItTextItem& operator=( const SvxPostItTextItem& rText )
-    {
-        SetValue( rText.GetValue() );
-        return *this;
-    }
 };
 
 
--- osl/pipe.hxx	2015-11-25 07:55:38.000000000 -0500
+++ osl/pipe.hxx	2021-05-04 20:50:43.000000000 -0400
@@ -168,10 +168,6 @@
     {}
 
 
-    inline StreamPipe::StreamPipe(const StreamPipe& aPipe)
-        : Pipe( aPipe )
-    {}
-
     inline StreamPipe::StreamPipe( oslPipe pipe, __sal_NoAcquire noacquire )
         : Pipe( pipe , noacquire )
     {}
--- osl/pipe_decl.hxx	2015-11-25 07:55:38.000000000 -0500
+++ osl/pipe_decl.hxx	2021-05-04 20:49:05.000000000 -0400
@@ -151,11 +151,6 @@
     */
     inline StreamPipe(oslPipe Pipe);
 
-    /** Copy constructor.
-        @param Pipe
-    */
-    inline StreamPipe(const StreamPipe& Pipe);
-
     /** Creates a pipe.
         @param strName
         @param Options
--- osl/socket.hxx	2015-11-25 07:55:38.000000000 -0500
+++ osl/socket.hxx	2021-05-04 20:48:21.000000000 -0400
@@ -420,11 +420,6 @@
     {}
 
 
-    inline StreamSocket::StreamSocket( const StreamSocket & socket )
-        : Socket( socket )
-    {}
-
-
     inline sal_Int32 StreamSocket::read(void* pBuffer, sal_uInt32 n)
     {
         return osl_readSocket( m_handle, pBuffer, n );
--- osl/socket_decl.hxx	2015-11-25 07:55:38.000000000 -0500
+++ osl/socket_decl.hxx	2021-05-04 20:47:39.000000000 -0400
@@ -511,8 +511,6 @@
                             oslProtocol Protocol = osl_Socket_ProtocolIp,
                             oslSocketType   Type = osl_Socket_TypeStream);
 
-        inline StreamSocket( const StreamSocket & );
-
         inline StreamSocket( oslSocket Socket , __sal_NoAcquire noacquire );
 
         inline StreamSocket( oslSocket Socket );
--- editeng/borderline.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/borderline.hxx	2021-05-05 08:14:11.000000000 -0400
@@ -76,9 +76,6 @@
                 Color (*pColorOutFn)( Color ) = &darkColor,
                 Color (*pColorInFn)( Color ) = &darkColor,
                 Color (*pColorGapFn)( Color ) = NULL );
-        SvxBorderLine( const SvxBorderLine& r );
-
-        SvxBorderLine& operator=( const SvxBorderLine& r );
 
         const Color&    GetColor() const { return aColor; }
         Color           GetColorOut( bool bLeftOrTop = true ) const;
--- editeng/colritem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/colritem.hxx	2021-05-05 08:13:41.000000000 -0400
@@ -45,7 +45,6 @@
     explicit SvxColorItem( const sal_uInt16 nId );
     SvxColorItem( const Color& aColor, const sal_uInt16 nId  );
     SvxColorItem( SvStream& rStrm, const sal_uInt16 nId  );
-    SvxColorItem( const SvxColorItem& rCopy );
     virtual ~SvxColorItem();
 
     // "pure virtual Methods" from SfxPoolItem
@@ -89,7 +88,6 @@
         SvxBackgroundColorItem( const Color& rCol,
                                 const sal_uInt16 nId );
         SvxBackgroundColorItem( SvStream& rStrm, const sal_uInt16 nId  );
-        SvxBackgroundColorItem( const SvxBackgroundColorItem& rCopy );
 
         virtual SfxPoolItem* Clone(SfxItemPool* pPool = 0) const SAL_OVERRIDE;
         virtual SvStream& Store(SvStream& rStream, sal_uInt16 nVersion) const SAL_OVERRIDE;
--- editeng/flstitem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/flstitem.hxx	2021-05-05 08:12:00.000000000 -0400
@@ -46,7 +46,6 @@
 
     SvxFontListItem( const FontList* pFontLst,
                      const sal_uInt16 nId  );
-    SvxFontListItem( const SvxFontListItem& rItem );
 
     virtual bool            operator==( const SfxPoolItem& ) const SAL_OVERRIDE;
     virtual SfxPoolItem*    Clone( SfxItemPool *pPool = 0 ) const SAL_OVERRIDE;
--- editeng/formatbreakitem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/formatbreakitem.hxx	2021-05-08 21:27:44.000000000 -0400
@@ -40,8 +40,8 @@
 
     inline SvxFmtBreakItem( const SvxBreak eBrk /*= SVX_BREAK_NONE*/,
                             const sal_uInt16 nWhich );
-    inline SvxFmtBreakItem( const SvxFmtBreakItem& rBreak );
     inline SvxFmtBreakItem& operator=( const SvxFmtBreakItem& rCpy );
+    SvxFmtBreakItem(SvxFmtBreakItem const &) = default; // SfxPoolItem copy function dichotomy
 
     // "pure virtual Methods" from SfxPoolItem
     virtual bool            operator==( const SfxPoolItem& ) const SAL_OVERRIDE;
@@ -74,10 +74,6 @@
     SfxEnumItem( _nWhich, (sal_uInt16)eBreak )
 {}
 
-inline SvxFmtBreakItem::SvxFmtBreakItem( const SvxFmtBreakItem& rBreak ) :
-    SfxEnumItem( rBreak )
-{}
-
 inline SvxFmtBreakItem& SvxFmtBreakItem::operator=(
     const SvxFmtBreakItem& rBreak )
 {
--- editeng/optitems.hxx	2021-05-04 20:53:36.000000000 -0400
+++ editeng/optitems.hxx	2021-05-05 08:09:53.000000000 -0400
@@ -40,7 +40,6 @@
     SfxSpellCheckItem( ::com::sun::star::uno::Reference<
                             ::com::sun::star::linguistic2::XSpellChecker1 >  &xChecker,
                        sal_uInt16 nWhich  );
-    SfxSpellCheckItem( const SfxSpellCheckItem& rItem );
 
     virtual bool GetPresentation( SfxItemPresentation ePres,
                                     SfxMapUnit eCoreMetric,
@@ -88,13 +87,6 @@
 
     inline sal_uInt8 &GetMinTrail() { return nMinTrail; }
     inline sal_uInt8 GetMinTrail() const { return nMinTrail; }
-
-    inline SfxHyphenRegionItem& operator=( const SfxHyphenRegionItem& rNew )
-    {
-        nMinLead = rNew.GetMinLead();
-        nMinTrail = rNew.GetMinTrail();
-        return *this;
-    }
 };
 
 #endif
--- editeng/paragraphdata.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/paragraphdata.hxx	2021-05-05 08:09:18.000000000 -0400
@@ -40,11 +40,8 @@
     bool                mbParaIsNumberingRestart;
 
 public:
-    ParagraphData( const ParagraphData& );
     ParagraphData();
 
-    ParagraphData& operator=( const ParagraphData& );
-
     // compare operator
     bool operator==(const ParagraphData& rCandidate) const;
 
--- editeng/swafopt.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/swafopt.hxx	2021-05-05 08:08:34.000000000 -0400
@@ -123,8 +123,6 @@
          ;
 
     SvxSwAutoFmtFlags();
-    SvxSwAutoFmtFlags( const SvxSwAutoFmtFlags& rAFFlags ) { *this = rAFFlags; }
-    SvxSwAutoFmtFlags& operator=( const SvxSwAutoFmtFlags& );
 };
 
 #endif
--- editeng/tstpitem.hxx	2021-05-08 21:49:46.000000000 -0400
+++ editeng/tstpitem.hxx	2021-05-09 16:33:54.000000000 -0400
@@ -80,15 +80,6 @@
                         { return nTabPos == rTS.nTabPos; }
     bool            operator <( const SvxTabStop& rTS ) const
                         { return nTabPos < rTS.nTabPos; }
-
-    SvxTabStop&     operator=( const SvxTabStop& rTS )
-                        {
-                            nTabPos = rTS.nTabPos;
-                            eAdjustment = rTS.eAdjustment;
-                            m_cDecimal = rTS.m_cDecimal;
-                            cFill = rTS.cFill;
-                            return *this;
-                        }
 };
 
 // class SvxTabStopItem --------------------------------------------------
@@ -112,7 +103,6 @@
                     const sal_uInt16 nDist,
                     const SvxTabAdjust eAdjst /*= SVX_TAB_ADJUST_DEFAULT*/,
                     sal_uInt16 nWhich  );
-    SvxTabStopItem( const SvxTabStopItem& rTSI );
 
     // Returns index of the tab or TAB_NOTFOUND
     sal_uInt16          GetPos( const SvxTabStop& rTab ) const;
@@ -132,6 +122,7 @@
 
     // Assignment operator, equality operator (caution: expensive!)
     SvxTabStopItem& operator=( const SvxTabStopItem& rTSI );
+    SvxTabStopItem(SvxTabStopItem const &) = default; // SfxPoolItem copy function dichotomy
 
     // this is already included in SfxPoolItem declaration
     //int             operator!=( const SvxTabStopItem& rTSI ) const
--- editeng/twolinesitem.hxx	2021-05-05 10:06:12.000000000 -0400
+++ editeng/twolinesitem.hxx	2021-05-05 21:56:31.000000000 -0400
@@ -35,9 +35,11 @@
                      sal_Unicode nStartBracket /*= 0*/,
                      sal_Unicode nEndBracket /*= 0*/,
                      sal_uInt16 nId  );
-    SvxTwoLinesItem( const SvxTwoLinesItem& rAttr );
     virtual ~SvxTwoLinesItem();
 
+    SvxTwoLinesItem(SvxTwoLinesItem const &) = default;
+    SvxTwoLinesItem(SvxTwoLinesItem &&) = default;
+
     // "pure virtual Methods" from SfxPoolItem
     virtual bool            operator==( const SfxPoolItem& ) const SAL_OVERRIDE;
     virtual SfxPoolItem*    Clone( SfxItemPool* pPool = 0 ) const SAL_OVERRIDE;
--- editeng/lrspitem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/lrspitem.hxx	2021-05-08 20:36:22.000000000 -0400
@@ -71,6 +71,7 @@
                     const long nTLeft /*= 0*/, const short nOfset /*= 0*/,
                     const sal_uInt16 nId  );
     inline SvxLRSpaceItem& operator=( const SvxLRSpaceItem &rCpy );
+    SvxLRSpaceItem(SvxLRSpaceItem const &) = default;
 
     // "pure virtual Methods" from SfxPoolItem
     virtual bool            operator==( const SfxPoolItem& ) const SAL_OVERRIDE;
--- editeng/fhgtitem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/fhgtitem.hxx	2021-05-08 21:22:46.000000000 -0400
@@ -72,6 +72,7 @@
             ePropUnit = rSize.ePropUnit;
             return *this;
         }
+    SvxFontHeightItem(SvxFontHeightItem const &) = default; // SfxPoolItem copy function dichotomy
 
     void SetHeight( sal_uInt32 nNewHeight, const sal_uInt16 nNewProp = 100,
                      SfxMapUnit eUnit = SFX_MAPUNIT_RELATIVE );
--- editeng/fontitem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/fontitem.hxx	2021-05-08 20:43:46.000000000 -0400
@@ -84,6 +84,7 @@
     rtl_TextEncoding GetCharSet() const { return eTextEncoding; }
 
     SvxFontItem& operator=(const SvxFontItem& rFont);
+    SvxFontItem(SvxFontItem const &) = default; // SfxPoolItem copy function dichotomy
 
     static void EnableStoreUnicodeNames( bool bEnable );
 
--- editeng/langitem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/langitem.hxx	2021-05-08 21:25:55.000000000 -0400
@@ -56,6 +56,7 @@
             SetValue( rLang.GetValue() );
             return *this;
         }
+    SvxLanguageItem(SvxLanguageItem const &) = default; // SfxPoolItem copy function dichotomy
 
     // enum cast
     LanguageType            GetLanguage() const
--- editeng/shaditem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/shaditem.hxx	2021-05-08 21:13:55.000000000 -0400
@@ -50,6 +50,7 @@
                  const SvxShadowLocation eLoc = SVX_SHADOW_NONE );
 
     inline SvxShadowItem& operator=( const SvxShadowItem& rFmtShadow );
+    SvxShadowItem(SvxShadowItem const &) = default; // SfxPoolItem copy function dichotomy
 
     // "pure virtual Methods" from SfxPoolItem
     virtual bool             operator==( const SfxPoolItem& ) const SAL_OVERRIDE;
--- editeng/udlnitem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/udlnitem.hxx	2021-05-08 21:36:25.000000000 -0400
@@ -69,6 +69,7 @@
             SetColor( rTextLine.GetColor() );
             return *this;
         }
+    SvxTextLineItem(SvxTextLineItem const &) = default; // SfxPoolItem copy function dichotomy
 
     // enum cast
     FontUnderline           GetLineStyle() const
--- editeng/ulspitem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/ulspitem.hxx	2021-05-08 20:40:36.000000000 -0400
@@ -45,6 +45,7 @@
     SvxULSpaceItem( const sal_uInt16 nUp, const sal_uInt16 nLow,
                     const sal_uInt16 nId  );
     inline SvxULSpaceItem& operator=( const SvxULSpaceItem &rCpy );
+    SvxULSpaceItem(SvxULSpaceItem const &) = default; // SfxPoolItem copy function dichotomy
 
     // "pure virtual Methods" from SfxPoolItem
     virtual bool            operator==( const SfxPoolItem& ) const SAL_OVERRIDE;
--- connectivity/dbexception.hxx	2015-11-25 07:55:38.000000000 -0500
+++ connectivity/dbexception.hxx	2021-05-09 13:32:15.000000000 -0400
@@ -83,8 +83,6 @@
     */
     SQLExceptionInfo( const OUString& _rSimpleErrorMessage );
 
-    SQLExceptionInfo(const SQLExceptionInfo& _rCopySource);
-
             // use for events got via XSQLErrorListener::errorOccured
     SQLExceptionInfo(const ::com::sun::star::uno::Any& _rError);
             // use with the Reason member of an SQLErrorEvent or with NextElement of an SQLException
--- tools/svborder.hxx	2015-11-25 07:55:38.000000000 -0500
+++ tools/svborder.hxx	2021-05-09 14:14:07.000000000 -0400
@@ -51,14 +51,6 @@
             }
     bool    operator != ( const SvBorder & rObj ) const
             { return !(*this == rObj); }
-    SvBorder & operator = ( const SvBorder & rBorder )
-            {
-                Left()   = rBorder.Left();
-                Top()    = rBorder.Top();
-                Right()  = rBorder.Right();
-                Bottom() = rBorder.Bottom();
-                return *this;
-            }
     SvBorder & operator += ( const SvBorder & rBorder )
             {
                 Left()   += rBorder.Left();
--- unotools/confignode.hxx	2015-11-25 07:55:38.000000000 -0500
+++ unotools/confignode.hxx	2021-05-09 17:01:40.000000000 -0400
@@ -249,10 +249,6 @@
             const bool i_bUpdatable
         );
 
-        /// copy ctor
-        OConfigurationTreeRoot(const OConfigurationTreeRoot& _rSource)
-            :OConfigurationNode(_rSource), m_xCommitter(_rSource.m_xCommitter) { }
-
         /** open a new top-level configuration node
 
             opens a new node which is the root if an own configuration sub tree. This is what "top level" means: The
--- salhelper/timer.hxx	2015-11-25 07:55:38.000000000 -0500
+++ salhelper/timer.hxx	2021-05-09 17:08:57.000000000 -0400
@@ -56,14 +56,6 @@
         normalize();
     }
 
-    TTimeValue( const TTimeValue& rTimeValue )
-    {
-        Seconds = rTimeValue.Seconds;
-        Nanosec = rTimeValue.Nanosec;
-
-        normalize();
-    }
-
     TTimeValue( const TimeValue& rTimeValue )
     {
         Seconds = rTimeValue.Seconds;
--- editeng/wghtitem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/wghtitem.hxx	2021-05-09 17:15:37.000000000 -0400
@@ -63,6 +63,7 @@
             SetValue( rWeight.GetValue() );
             return *this;
         }
+    SvxWeightItem(SvxWeightItem const &) = default; // SfxPoolItem copy function dichotomy
 
     // enum cast
     FontWeight              GetWeight() const
--- editeng/sizeitem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/sizeitem.hxx	2021-05-09 17:17:05.000000000 -0400
@@ -42,6 +42,7 @@
     SvxSizeItem( const sal_uInt16 nId, const Size& rSize);
 
     inline SvxSizeItem& operator=( const SvxSizeItem &rCpy );
+    SvxSizeItem(SvxSizeItem const &) = default; // SfxPoolItem copy function dichotomy
 
     // "pure virtual Methods" from SfxPoolItem
     virtual bool            operator==( const SfxPoolItem& ) const SAL_OVERRIDE;
--- editeng/shdditem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/shdditem.hxx	2021-05-09 17:18:39.000000000 -0400
@@ -53,7 +53,7 @@
             SetValue(rShadow.GetValue());
             return *this;
         }
-
+    SvxShadowedItem(SvxShadowedItem const &) = default; // SfxPoolItem copy function dichotomy
 };
 
 #endif
--- editeng/protitem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/protitem.hxx	2021-05-09 17:20:35.000000000 -0400
@@ -43,6 +43,7 @@
 
     explicit inline SvxProtectItem( const sal_uInt16 nId  );
     inline SvxProtectItem &operator=( const SvxProtectItem &rCpy );
+    SvxProtectItem(SvxProtectItem const &) = default; // SfxPoolItem copy function dichotomy
 
     // "pure virtual Methods" from SfxPoolItem
     virtual bool             operator==( const SfxPoolItem& ) const SAL_OVERRIDE;
--- editeng/postitem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/postitem.hxx	2021-05-09 17:22:15.000000000 -0400
@@ -63,7 +63,8 @@
         SetValue( rPost.GetValue() );
         return *this;
     }
-
+    SvxPostureItem(SvxPostureItem const &) = default; // SfxPoolItem copy function dichotomy
+ 
     // enum cast
     FontItalic              GetPosture() const
                                 { return (FontItalic)GetValue(); }
--- editeng/opaqitem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/opaqitem.hxx	2021-05-09 17:23:48.000000000 -0400
@@ -39,6 +39,7 @@
 
     explicit SvxOpaqueItem( const sal_uInt16 nId , const bool bOpa = true );
     inline SvxOpaqueItem &operator=( const SvxOpaqueItem &rCpy );
+    SvxOpaqueItem(SvxOpaqueItem const &) = default; // SfxPoolItem copy function dichotomy
 
     // "pure virtual Methods" from SfxPoolItem
     virtual SfxPoolItem*    Clone( SfxItemPool *pPool = 0 ) const SAL_OVERRIDE;
--- editeng/keepitem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/keepitem.hxx	2021-05-09 17:25:35.000000000 -0400
@@ -38,6 +38,7 @@
     inline SvxFmtKeepItem( const bool bKeep /*= false*/,
                            const sal_uInt16 _nWhich  );
     inline SvxFmtKeepItem& operator=( const SvxFmtKeepItem& rSplit );
+    SvxFmtKeepItem(SvxFmtKeepItem const &) = default; // SfxPoolItem copy function dichotomy
 
     // "pure virtual Methods" from SfxPoolItem
     virtual SfxPoolItem*    Clone( SfxItemPool *pPool = 0 ) const SAL_OVERRIDE;
--- editeng/crossedoutitem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/crossedoutitem.hxx	2021-05-09 17:30:00.000000000 -0400
@@ -66,6 +66,7 @@
             SetValue( rCross.GetValue() );
             return *this;
         }
+    SvxCrossedOutItem(SvxCrossedOutItem const &) = default; // SfxPoolItem copy function dichotomy
 
     // enum cast
     FontStrikeout           GetStrikeout() const
--- editeng/contouritem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/contouritem.hxx	2021-05-09 17:31:14.000000000 -0400
@@ -51,6 +51,7 @@
         SetValue(rCont.GetValue());
         return *this;
     }
+    SvxContourItem(SvxContourItem const &) = default; // SfxPoolItem copy function dichotomy
 };
 
 #endif
--- svx/algitem.hxx	2021-05-09 17:38:23.000000000 -0400
+++ svx/algitem.hxx	2021-05-09 18:58:20.000000000 -0400
@@ -60,6 +60,7 @@
                 SetValue( rOrientation.GetValue() );
                 return *this;
             }
+    SvxOrientationItem(SvxOrientationItem const &) = default; // SfxPoolItem copy function dichotomy
 
     /** Returns sal_True, if the item represents STACKED state. */
     bool                    IsStacked() const;
--- svx/rulritem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ svx/rulritem.hxx	2021-05-10 07:49:41.000000000 -0400
@@ -134,8 +134,6 @@
 
     SvxColumnDescription();
 
-    SvxColumnDescription(const SvxColumnDescription &rCopy);
-
     SvxColumnDescription(long start, long end, bool bVis = true);
 
     SvxColumnDescription(long start, long end,
--- framework/preventduplicateinteraction.hxx	2015-11-25 07:55:38.000000000 -0500
+++ framework/preventduplicateinteraction.hxx	2021-05-10 08:01:31.000000000 -0400
@@ -79,13 +79,6 @@
                     , m_nMaxCount   (nMaxCount   )
                     , m_nCallCount  (0           )
                 {}
-
-                InteractionInfo(const InteractionInfo& aCopy)
-                    : m_aInteraction(aCopy.m_aInteraction)
-                    , m_nMaxCount   (aCopy.m_nMaxCount   )
-                    , m_nCallCount  (aCopy.m_nCallCount  )
-                    , m_xRequest    (aCopy.m_xRequest    )
-                {}
         };
 
         typedef ::std::vector< InteractionInfo > InteractionList;
--- editeng/prszitem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/prszitem.hxx	2021-05-10 08:10:02.000000000 -0400
@@ -52,6 +52,7 @@
         SetValue( rPropSize.GetValue() );
         return *this;
     }
+    SvxPropSizeItem(SvxPropSizeItem const &) = default; // SfxPoolItem copy function dichotomy
 };
 
 #endif
--- editeng/pmdlitem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/pmdlitem.hxx	2021-05-10 08:19:27.000000000 -0400
@@ -40,7 +40,6 @@
     explicit inline SvxPageModelItem( sal_uInt16 nWh  );
     inline SvxPageModelItem( const OUString& rModel, bool bA /*= false*/,
                              sal_uInt16 nWh  );
-    inline SvxPageModelItem& operator=( const SvxPageModelItem& rModel );
 
     virtual SfxPoolItem*    Clone( SfxItemPool *pPool = 0 ) const SAL_OVERRIDE;
 
@@ -66,12 +65,6 @@
     bAuto( bA )
 {}
 
-inline SvxPageModelItem& SvxPageModelItem::operator=( const SvxPageModelItem& rModel )
-{
-    SetValue( rModel.GetValue() );
-    return *this;
-}
-
 #endif
 
 /* vim:set shiftwidth=4 softtabstop=4 expandtab: */
--- editeng/nlbkitem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/nlbkitem.hxx	2021-05-10 08:23:23.000000000 -0400
@@ -46,6 +46,7 @@
             SetValue( rLB.GetValue() );
             return *this;
         }
+    SvxNoLinebreakItem(SvxNoLinebreakItem const &) = default; // SfxPoolItem copy function dichotomy
 };
 
 
--- editeng/fwdtitem.hxx	2015-11-25 07:55:38.000000000 -0500
+++ editeng/fwdtitem.hxx	2021-05-10 08:28:32.000000000 -0400
@@ -63,6 +63,7 @@
             SetProp( rItem.GetProp() );
             return *this;
         }
+    SvxFontWidthItem(SvxFontWidthItem const &) = default; // SfxPoolItem copy function dichotomy
 
     void SetWidth( sal_uInt16 nNewWidth, const sal_uInt16 nNewProp = 100 )
         {
--- svx/xtable.hxx	2015-11-25 07:55:38.000000000 -0500
+++ svx/xtable.hxx	2021-05-10 08:36:14.000000000 -0400
@@ -64,7 +64,6 @@
 
 public:
     XColorEntry(const Color& rColor, const OUString& rName);
-    XColorEntry(const XColorEntry& rOther);
 
     const Color& GetColor() const
     {
--- filter/msfilter/svdfppt.hxx	2015-11-25 07:55:38.000000000 -0500
+++ filter/msfilter/svdfppt.hxx	2021-05-10 09:02:38.000000000 -0400
@@ -767,7 +767,6 @@
     PPTCharLevel    maCharLevel[nMaxPPTLevels];
 
                     explicit PPTCharSheet( sal_uInt32 nInstance );
-                    PPTCharSheet( const PPTCharSheet& rCharSheet );
 
     void            Read( SvStream& rIn, bool bMasterStyle, sal_uInt32 nLevel, bool bFirst );
 };
@@ -800,7 +799,6 @@
     PPTParaLevel    maParaLevel[nMaxPPTLevels];
 
                     explicit PPTParaSheet( sal_uInt32 nInstance );
-                    PPTParaSheet( const PPTParaSheet& rParaSheet );
 
     bool            Read(
                         SdrPowerPointImport& rMan,
