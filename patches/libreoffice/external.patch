--- hsqldb/UnpackedTarball_hsqldb.mk	2022-10-10 06:15:14.000000000 -0400
+++ hsqldb/UnpackedTarball_hsqldb.mk	2022-10-15 08:57:43.000000000 -0400
@@ -27,6 +27,7 @@
 	external/hsqldb/patches/hsqldb-runFinalizersOnExit.patch \
 	external/hsqldb/patches/jdbc-4.1.patch \
 	external/hsqldb/patches/multipleResultSets.patch \
+	external/hsqldb/patches/hsqldb.patch \
 ))
 
 # vim: set noet sw=4 ts=4:
--- /dev/null	2022-10-15 08:53:41.000000000 -0400
+++ hsqldb/patches/hsqldb.patch	2022-10-10 06:50:14.000000000 -0400
@@ -0,0 +1,72 @@
+--- misc/hsqldb/src/org/hsqldb/Database.java	2007-10-20 15:57:55.000000000 -0700
++++ misc/build/hsqldb/src/org/hsqldb/Database.java	2016-02-28 08:25:10.000000000 -0800
+@@ -227,7 +227,7 @@
+                     fileAccessClass =
+                         classLoader.loadClass(fileaccess_class_name);
+                 }
+-                catch (ClassNotFoundException e) {
++                catch (Throwable e) {
+                     fileAccessClass = Class.forName(fileaccess_class_name);
+                 }
+                 Constructor constructor =
+--- misc/hsqldb/src/org/hsqldb/DatabaseCommandInterpreter.java	2008-05-27 05:26:44.000000000 -0700
++++ misc/build/hsqldb/src/org/hsqldb/DatabaseCommandInterpreter.java	2016-02-28 08:24:27.000000000 -0800
+@@ -1224,9 +1224,7 @@
+             t.createPrimaryKey(null, primaryConst.core.mainColArray, true);
+ 
+             if (primaryConst.core.mainColArray != null) {
+-                if (primaryConst.constName == null) {
+-                    primaryConst.constName = t.makeSysPKName();
+-                }
++                primaryConst.constName = t.makeSysPKName();
+ 
+                 Constraint newconstraint =
+                     new Constraint(primaryConst.constName, t,
+--- misc/hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java	2016-02-27 08:53:13.000000000 -0800
++++ misc/build/hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java	2016-02-28 08:20:55.000000000 -0800
+@@ -61,7 +61,9 @@
+ 
+     static {
+         try {
+-            String prop = System.getProperty(hsqldb_method_class_names);
++            // Return an empty string to make sure that security is as tight
++            // as possible by default
++            String prop = System.getProperty(hsqldb_method_class_names, "");
+ 
+             if (prop != null) {
+                 accessibleJavaMethodNames = new HashSet();
+--- misc/hsqldb/src/org/hsqldb/persist/LockFile.java	2008-03-17 08:02:50.000000000 -0700
++++ misc/build/hsqldb/src/org/hsqldb/persist/LockFile.java	2016-02-28 08:19:11.000000000 -0800
+@@ -604,6 +604,21 @@
+ 
+         lockFile.setPath(path);
+ 
++        // Some platforms like Mac OS X cannot lock mounted file systems
++        // so test for such problems so that we can fall back to this
++        // class' locking behavior.
++        try {
++            if (!lockFile.tryLock()) {
++                lockFile = new LockFile();
++                lockFile.setPath(path);
++            }
++            else {
++                lockFile.tryRelease();
++            }
++        } catch (Throwable t) {
++            Trace.printSystemOut(t.toString());
++        }
++
+         return lockFile;
+     }
+ 
+--- misc/hsqldb/src/org/hsqldb/persist/ScaledRAFile.java	2016-02-27 08:53:17.000000000 -0800
++++ misc/build/hsqldb/src/org/hsqldb/persist/ScaledRAFile.java	2016-02-28 08:17:31.000000000 -0800
+@@ -97,7 +97,7 @@
+                     storageClass =
+                         classLoader.loadClass(classname);
+                 }
+-                catch (ClassNotFoundException e) {
++                catch (Throwable e) {
+                     storageClass = Class.forName(classname);
+                 }
+                 Constructor constructor =
